

# Estos son ejemplos ejecutados en consola

# IMPORTO LOS MODELOS NECESARIOS
from Pedidos.models import Proveedor, Cerveza, Pedido, LineaPedido
from django.contrib.auth.models import User

# CREAR PEDIDO

#Obtengo un usuario
usr = User.objects.get(pk=2)
#tambien lo puedo hacer desde el request

#Obtengo un proveedor 
prov = Proveedor.objects.get(pk=4)

#Obtengo las cervezas de ESE proveedor
#"cerveza" no es un campo del modelo "Proveedor"
beers = prov.cerveza_set.all()

#Creo un objeto "Pedido"
pedidoUno = Pedido()
pedidoUno.usuario = usr
pedidoUno.proveedor_id = prov.id

#Guardo En Base De Datos
pedidoUno.save()

# No se por que no me reconoce el campo "proovedor" en el modelo Pedido
# Por eso uso "proveedor_id"

#CREAR UN OBJETO DE LINEA DE PEDIDO
lineaUno = LineaPedido()

# Anteriormente guarde en la variable "beers" las cervezas de UN DETERMINADO proveedor
# Veo las cervezas de ESE proveedor
>>> beers
<QuerySet [<Cerveza: IPA>, <Cerveza: otra Birra>, <Cerveza: Porter>]>
>>> beers[0].id
1
>>> beers[1].id
3
>>> beers[2].id
2

# Ahora le asigno los valores a los campos de "lineaUno"
lineaUno.cerveza = beers[0] #Cada linea tiene solo una cerveza... (aclaracion anti B)
lineaUno.pedido = pedidoUno #Cada linea tiene un solo pedido... (aclaracion anti B)
lineaUno.cantidad = 5
lineaUno.save()

#De este modo hay un "Pedido" que tiene un "Usuario" y cada pedido puede tener varias lineas de pedido

# VEO las lineas de un Pedido
>>> pedidoUno.lineapedido_set.all()
<QuerySet [<LineaPedido: LineaPedido object (1)>, <LineaPedido: LineaPedido object (2)>]>

# VEO LAS CERVEZAS DE UN PEDIDO
>>> birras = pedidoUno.cerveza.all()
>>> birras
<QuerySet [<Cerveza: Porter>, <Cerveza: IPA>, <Cerveza: otra Birra>]>

>>> for beer in birras:
...     print(beer.nombre)
... 
Porter
IPA
otra Birra
>>> 

############ Sin crear "LineaPedido" a mano ############

>>> pedidoUno.cerveza.add(beers[2], through_defaults={'cantidad':4})
>>> pedidoUno.cerveza.add(beers[1], through_defaults={'cantidad':4})
>>> pedidoUno.cerveza.add(beers[0], through_defaults={'cantidad':6})


# Una vez creado el pedido, agrego al campo "cerveza", que es una coleccion de objetos de tipo
# "Cerveza"; indicando que lo hago a travez del modelo definido en la relacion con
# "through_defaults". Completo el campo extra de "LineaPedido" que en este caso
# es la "cantidad" y automaticamente se guarda un nuevo objeto de "LineaPedido"
# en Base De Datos


######## INGRESOS ##########
from Pedidos.models import Pedido, Proveedor, Cerveza, Ingreso, Barril

Listo Todos los ingresos
>>> ingresos = Ingreso.objects.all()
<QuerySet [<Ingreso: Ingreso object (2)>]>

Selecciono un ingreso
>>> ingDos = Ingreso.objects.get(pk=2)

Selecciono barriles de un ingreso
>>> barriles = ingDos.barril_set.all()
>>> barriles
<QuerySet
    [
    <Barril: Barril object (6)>,
    <Barril: Barril object (7)>,
    <Barril: Barril object (8)>,
    <Barril: Barril object (9)>,
    <Barril: Barril object (10)>
    ]
> 

Selecciono Lineas De Pedido De Este ingreso
>>> lineas = ingDos.pedido.lineapedido_set.all()
>>> lineas
<QuerySet [<LineaPedido: Porter>, <LineaPedido: IPA>, <LineaPedido: Pale Ale>]>

Veo las cantidades "entregado" de cada linea
>>> for linea in lineas:
...     print(linea.entregado)
... 
3
1
1

>>> for barril in barriles:
...     print(barril)
... 
Barril object (6)
Barril object (7)
Barril object (8)
Barril object (9)
Barril object (10)